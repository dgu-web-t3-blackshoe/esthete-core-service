server:
  port: 8080

spring:
  application:
    name: esthete-core
  datasource:
    url: jdbc:mysql://${MYSQL_HOST}:${MYSQL_PORT}/${MYSQL_INITIAL_DB}?useSSL=false&serverTimezone=Asia/Seoul&characterEncoding=utf8&allowPublicKeyRetrieval=true
    username: ${MYSQL_USERNAME}
    password: ${MYSQL_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP-SERVERS}

  jpa:
    defer-datasource-initialization: true
    database: mysql
    database-platform: org.hibernate.dialect.MySQL5Dialect
    open-in-view: true
    generate-ddl: true
    show-sql: true
    hibernate:
      ddl-auto: ${SPRING_DATASOURCE_DDL-AUTO}
    properties:
      hibernate:
        jdbc:
          time_zone: Asia/Seoul
        show_sql: true
        format_sql: true
    repositories:
      enabled: true

  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}

  security:
    oauth2:
      redirect-uri: ${SUCCESS_REDIRECT_URI}
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: ${OAUTH2_BASE_URI}/oauth2/callback/google
            scope: email
            authorization-grant-type: authorization_code
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            redirect-uri: ${OAUTH2_BASE_URI}/oauth2/callback/naver
            authorization-grant-type: authorization_code
            scope: email
            client-name: naver
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: ${OAUTH2_BASE_URI}/oauth2/callback/kakao
            client-authentication-method: POST
            scope: account_email
            authorization-grant-type: authorization_code

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

springfox:
  documentation:
    swagger-ui:
      enabled: true
      base-url: core
    open-api:
      v3:
        path: core/v3/api-docs

cloud:
  gcp:
    project-id: ${GCP_PROJECT_ID}
    credentials:
      location: ${GCP_CREDENTIALS_PATH}/gcp.json
      path: ${GCP_CREDENTIALS_PATH}
      string: ${GCP_CREDENTIALS}
    vision:
      safe-search-option: ${GCP_VISION_SAFE_SEARCH_OPTION}
    geo-coding:
      api-key: ${GCP_GEOCODING_API_KEY}

  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY}
      secret-key: ${AWS_SECRET_KEY}
    s3:
      bucket: esthete-s3
      root-directory: test
      photo-directory: photo

    region:
      static: ap-northeast-2
    stack:
      auto: false
    cloudfront:
      distribution-domain: ${CLOUDFRONT_URL}

logging:
  level:
    com:
      amazonaws:
        util:
          EC2MetadataUtils: error
    org:
    springframework:
      web: DEBUG
      security: DEBUG
      data: DEBUG
      kafka: DEBUG
      hibernate: DEBUG
      jpa: DEBUG
      oauth2: DEBUG
      springframework: DEBUG
      springfox: DEBUG
      esthete: DEBUG
      lombok: DEBUG
servers:
  - url: https://api.esthete.roberniro-projects.xyz
    description: Production server

app:
  jwt:
    secret: ${JWT_SECRET}
    expiration: 3684000

services:
  admin-service: ${ADMIN_SERVICE_URL}
  geo-coding-service: https://maps.googleapis.com/maps/api/geocode
  place-autocomplete-service: https://maps.googleapis.com/maps/api/place/autocomplete

itext:
  font-directory: ${ITEXT_FONT_DIRECTORY}
  font-name: ${ITEXT_FONT_NAME}
  font-download-url: ${ITEXT_FONT_DOWNLOAD_URL}